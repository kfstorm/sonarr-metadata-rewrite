name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
    - uses: actions/checkout@v5

    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.10

    - name: Install dependencies
      run: uv sync --group dev

    - name: Run pre-commit hooks
      run: uv run pre-commit run --all-files

    - name: Run linting checks
      run: ./scripts/lint.sh --check

    - name: Run unit tests
      run: ./scripts/run-unit-tests.sh

    - name: Run integration tests
      env:
        TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
      run: ./scripts/run-integration-tests.sh

    - name: Combine coverage reports
      run: ./scripts/combine-coverage.sh

    - name: Coverage comment
      if: github.event_name == 'pull_request'
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Get coverage percentage for badge
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      id: coverage-percentage
      run: |
        COVERAGE=$(uv run coverage report --format=total)
        echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
        echo "Coverage percentage: $COVERAGE%"

    - name: Create coverage badge
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.GIST_ID }}
        filename: coverage.json
        label: Coverage
        message: ${{ steps.coverage-percentage.outputs.coverage }}%
        valColorRange: ${{ steps.coverage-percentage.outputs.coverage }}
        maxColorRange: 100
        minColorRange: 0

  docker-build:
    uses: ./.github/workflows/docker-build-reusable.yml
    permissions:
      contents: read
    with:
      push: false
      tags: sonarr-metadata-rewrite:ci-test
